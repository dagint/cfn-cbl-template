AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: Apache-2.0
Parameters:
  Identifier:
    Type: String
    Description: Enter account identifier (customername, servername, etc.)
  BucketName:
    Type: String
    Description: S3 BucketName
  DaysTillTransition:
    Type: Number
    Default: 1
    Description: Number of days to stay in S3 before being moved to glacier
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: Suspended       
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256     
      LifecycleConfiguration:
        Rules:
          - Id: GlacierArchive
            Status: Enabled
            Transitions:
              - StorageClass: GLACIER
                TransitionInDays: !Ref DaysTillTransition
      AccessControl: BucketOwnerFullControl
  CFNUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Join
                 - ''
                 - - !Ref Identifier
                   - '-user'
  CFNUserGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Join
                  - ''
                  - - !Ref Identifier
                    - '-grp'
  Users:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'CFNUserGroup'
      Users: [!Ref 'CFNUser']
  CFNUserPolicies:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: !Join
                   - ''
                   - - "Policy for granting  access to "
                     - !Ref Identifier
      ManagedPolicyName: !Join
                  - ''
                  - - !Ref Identifier
                    - '-pol'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - 
          Effect: Allow
          Action: 
            - "s3:ListBucket"
            - "s3:GetBucketAcl"
            - "s3:GetBucketVersioning"
            - "s3:GetBucketRequestPayment"
            - "s3:GetBucketLocation"
            - "s3:GetBucketPolicy"
          Resource: !GetAtt S3Bucket.Arn
        - Effect: Allow
          Action: 
            - "s3:GetObject"
            - "s3:DeleteObject"
            - "s3:DeleteObjectVersion"
            - "s3:GetObjectAcl"
            - "s3:GetObjectVersion"
            - "s3:GetObjectVersionAcl"
            - "s3:PutObject"
            - "s3:PutObjectAcl"
            - "s3:PutObjectVersionAcl"
          Resource: !Join
                    - '/'
                    - - !GetAtt S3Bucket.Arn
                      - '*'
        - Effect: Allow
          Action: "s3:ListAllMyBuckets"
          Resource: '*'
      Groups: [!Ref 'CFNUserGroup']
  CFNKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref 'CFNUser'
Outputs:
  SecretKey:
    Value: !GetAtt [CFNKeys, SecretAccessKey]
    Description: AWSSecretKey of new user
  AccessKey:
    Value: !Ref 'CFNKeys'
    Description: AWSAccessKeyId of new user
  